services:
  # Proxy to bypass Cloudflare protection
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTML: ${LOG_HTML:-false}
      CAPTCHA_SOLVER: ${CAPTCHA_SOLVER:-none}
      TZ: ${TZ:-Etc/UTC}
    networks:
      - servarr
    ports:
      - 8191:8191

  # Indexer, for searching various trackers
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=https
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.tls.certresolver=cloudflare
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=authentik-http@file
    networks:
      - servarr
      - traefik
    ports:
      - 9696:9696
    volumes:
      - prowlarr:/config

  # Handles TV series
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=cloudflare
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=authentik-http@file
    networks:
      - servarr
      - traefik
    ports:
      - 8989:8989
    volumes:
      - sonarr:/config
      - ${SERIES_DIR}:/data/tv
      - ${DOWNLOADS_DIR}:/downloads

  # Handles movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.rule=Host(`radarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=cloudflare
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=authentik-http@file
    networks:
      - servarr
      - traefik
    ports:
      - 7878:7878
    volumes:
      - radarr:/config
      - ${MOVIES_DIR}:/data/movies
      - ${DOWNLOADS_DIR}:/downloads

  # Handles eBooks
  # readarr:
  #   image: lscr.io/linuxserver/readarr:develop
  #   container_name: readarr
  #   restart: unless-stopped
  #   environment:
  #     PUID: ${PUID:?}
  #     PGID: ${PGID:?}
  #     TZ: ${TZ:-Etc/UTC}
  #   labels:
  #     - traefik.enable=true
  #     - traefik.http.routers.readarr.entrypoints=https
  #     - traefik.http.routers.readarr.rule=Host(`readarr.${TRAEFIK_DOMAIN:?}`)
  #     - traefik.http.routers.readarr.tls=true
  #     - traefik.http.routers.readarr.tls.certresolver=cloudflare
  #     - traefik.http.services.readarr.loadbalancer.server.port=8787
  #     - traefik.http.routers.readarr.middlewares=authentik-http@file
  #   networks:
  #     - servarr
  #     - traefik
  #   ports:
  #     - 8787:8787
  #   volumes:
  #     - readarr:/config
  #     - ${EBOOKS_DIR}:/data/books

  # Handles subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.bazarr.entrypoints=https
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.routers.bazarr.tls.certresolver=cloudflare
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=authentik-http@file
    networks:
      - servarr
      - traefik
    ports:
      - 6767:6767
    volumes:
      - bazarr:/config
      - ${MOVIES_DIR}:/data/movies
      - ${SERIES_DIR}:/data/tv
  # Downloader
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    restart: unless-stopped
    secrets:
      - transmission_password
    environment:
      USER: ${TRANSMISSION_USER:-admin}
      FILE__PASS: /run/secrets/transmission_password
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.entrypoints=https
      - traefik.http.routers.transmission.rule=Host(`transmission.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.transmission.tls=true
      - traefik.http.routers.transmission.tls.certresolver=cloudflare
      - traefik.http.services.transmission.loadbalancer.server.port=9091
      - traefik.http.routers.transmission.middlewares=authentik@file
    networks:
      - servarr
      - traefik
    ports:
      - 9091:9091
      - 51413:51413
      - 51413:51413/udp
    volumes:
      - transmission:/config
      - ${DOWNLOADS_DIR}:/downloads

  # Request handling
  jellyseerr:
    # https://hub.docker.com/r/fallenbagel/jellyseerr/tags
    image: fallenbagel/jellyseerr:preview-OIDC
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      LOG_LEVEL: info
      TZ: ${TZ:-Etc/UTC}
      TRUST_PROXY_HEADERS: true
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyseerr.entrypoints=https
      - traefik.http.routers.jellyseerr.rule=Host(`jellyseerr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.jellyseerr.tls=true
      - traefik.http.routers.jellyseerr.tls.certresolver=cloudflare
      - traefik.http.services.jellyseerr.loadbalancer.server.port=5055
      - traefik.http.routers.jellyseerr.middlewares=authentik@file
    networks:
      - traefik
    ports:
      - 5055:5055
    volumes:
      - jellyseerr:/app/config

  # Media streaming client
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
      # JELLYFIN_KNOWN_PROXIES: 172.18.0.0/16
      # JELLYFIN_PublishedServerUrl: https://jellyfin.${TRAEFIK_DOMAIN:?}
    labels:
      - traefik.enable=true
      - traefik.http.routers.jellyfin.entrypoints=https
      - traefik.http.routers.jellyfin.rule=Host(`jellyfin.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.jellyfin.tls=true
      - traefik.http.routers.jellyfin.tls.certresolver=cloudflare
      - traefik.http.services.jellyfin.loadbalancer.server.port=8096
      - traefik.http.routers.jellyfin.middlewares=authentik@file
    networks:
      - traefik
    ports:
      - 8096:8096
    devices:
      - /dev/dri/card0:/dev/dri/card0
    volumes:
      - jellyfin:/config
      - ${MOVIES_DIR}:/data/movies
      - ${SERIES_DIR}:/data/series

networks:
  servarr:
    name: servarr
  traefik:
    external: true

secrets:
  transmission_password:
    file: ./secrets/transmission_password.secret

volumes:
  bazarr:
    name: bazarr-config
  lazylibrarian:
    name: lazylibrarian-config
  jellyfin:
    name: jellyfin-config
  jellyseerr:
    name: jellyseerr-config
  prowlarr:
    name: prowlarr-config
  radarr:
    name: radarr-config
  sonarr:
    name: sonarr-config
  transmission:
    name: transmission-config
