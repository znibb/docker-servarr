services:
  # Proxy to bypass Cloudflare protection
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: unless-stopped
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_HTML: ${LOG_HTML:-false}
      CAPTCHA_SOLVER: ${CAPTCHA_SOLVER:-none}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - servarr

  # Indexer, for searching various trackers
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.prowlarr.entrypoints=https
      - traefik.http.routers.prowlarr.rule=Host(`prowlarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.tls.certresolver=cloudflare
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
      - traefik.http.routers.prowlarr.middlewares=authentik@file
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/prowlarr:/config

  # Handles TV series
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.sonarr.entrypoints=https
      - traefik.http.routers.sonarr.rule=Host(`sonarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=cloudflare
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
      - traefik.http.routers.sonarr.middlewares=authentik@file
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/sonarr:/config
      - series:/data/tv #optional
      - downloads:/data/downloads #optional

  # Handles movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.radarr.entrypoints=https
      - traefik.http.routers.radarr.rule=Host(`radarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=cloudflare
      - traefik.http.services.radarr.loadbalancer.server.port=7878
      - traefik.http.routers.radarr.middlewares=authentik@file
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/radarr:/config
      - movies:/data/movies #optional
      - downloads:/data/downloads #optional

  # Handles eBooks
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.readarr.entrypoints=https
      - traefik.http.routers.readarr.rule=Host(`readarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.readarr.tls=true
      - traefik.http.routers.readarr.tls.certresolver=cloudflare
      - traefik.http.services.readarr.loadbalancer.server.port=8787
      - traefik.http.routers.readarr.middlewares=authentik@file
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/readarr:/config
      - ebooks:/data/books #optional
      - downloads:/data/downloads #optional

  # Handles subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    restart: unless-stopped
    environment:
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - com.centurylinklabs.watchtower.enable=true
      - traefik.enable=true
      - traefik.http.routers.bazarr.entrypoints=https
      - traefik.http.routers.bazarr.rule=Host(`bazarr.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.bazarr.tls=true
      - traefik.http.routers.bazarr.tls.certresolver=cloudflare
      - traefik.http.services.bazarr.loadbalancer.server.port=6767
      - traefik.http.routers.bazarr.middlewares=authentik@file
    expose:
      - 6767
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/bazarr:/config
      - movies:/data/movies #optional
      - series:/data/tv #optional

  # Downloader
  transmission:
    image: lscr.io/linuxserver/transmission:latest
    container_name: transmission
    restart: unless-stopped
    secrets:
      - transmission_password
    environment:
      USER: ${TRANSMISSION_USER:-admin}
      FILE__PASS: /run/secrets/transmission_password
      PUID: ${PUID:?}
      PGID: ${PGID:?}
      TZ: ${TZ:-Etc/UTC}
    labels:
      - traefik.enable=true
      - traefik.http.routers.transmission.entrypoints=https
      - traefik.http.routers.transmission.rule=Host(`transmission.${TRAEFIK_DOMAIN:?}`)
      - traefik.http.routers.transmission.tls=true
      - traefik.http.routers.transmission.tls.certresolver=cloudflare
      - traefik.http.services.transmission.loadbalancer.server.port=9091
      - traefik.http.routers.transmission.middlewares=authentik@file
    ports:
      - 51413:51413
      - 51413:51413/udp
    networks:
      - servarr
      - traefik
    volumes:
      - ./config/transmission:/config
      - downloads:/data/downloads

networks:
  servarr:
    name: servarr

  traefik:
    external: true

secrets:
  transmission_password:
    file: ./secrets/transmission_password.secret

volumes:
  downloads:
    driver: local
    driver_opts:
      o: bind
      type: local
      device: /mnt/nas/slask/.torrents
  ebooks:
    driver: local
    driver_opts:
      o: bind
      type: local
      device: /mnt/nas/ebooks
  movies:
    driver: local
    driver_opts:
      o: bind
      type: local
      device: /mnt/nas/movies
  series:
    driver: local
    driver_opts:
      o: bind
      type: local
      device: /mnt/nas/series
